---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: applicationdeployments.thames.id.au
  namespace: {{ kube_resource_namespace }}
spec:
  group: thames.id.au
  names:
    kind: ApplicationDeployment
    listKind: ApplicationDeploymentList
    plural: applicationdeployments
    singular: applicationdeployment
  scope: Namespaced
  version: v1alpha1
  subresources:
    status: {}
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: consolidations.thames.id.au
  namespace: {{ kube_resource_namespace }}
spec:
  group: thames.id.au
  names:
    kind: Consolidation
    listKind: ConsolidationList
    plural: consolidations
    singular: consolidation
  scope: Namespaced
  version: v1alpha1
  subresources:
    status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ kube_resource_name }}
  namespace: {{ kube_resource_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ kube_resource_name }}
  template:
    metadata:
      labels:
        name: {{ kube_resource_name }}
    spec:
      securityContext:
        runAsUser: 65534
        fsGroup: 65534
      serviceAccountName: {{ kube_resource_name }}
      containers:
        - name: {{ application }}
          image: willthames/ansible-operator:{{ image_tag }}
          ports:
          - containerPort: 60000
            name: metrics
          imagePullPolicy: Always
          env:
            - name: WATCH_NAMESPACE
              value: "{{ kube_resource_namespace }}"
            - name: OPERATOR_NAME
              value: "{{ kube_resource_name }}"
            - name: ANSIBLE_VAULT_PASSWORD_FILE
              value: /ansible/vault
            - name: ANSIBLE_LOCAL_TEMP
              value: /tmp/ansible
            - name: ANSIBLE_INVENTORY
              value: /opt/ansible/inventory
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: ansible-repo
              mountPath: /opt
              readOnly: true
            - name: ansible-cfg
              mountPath: /etc/ansible
            - name: vault-password
              mountPath: /ansible
              readOnly: true
{% for application in application_operator_applications %}
            - name: ansible-repo-{{ application }}
              mountPath: /applications/{{ application }}
{% endfor %}
        - name: git-sync-common
          image: k8s.gcr.io/git-sync:v3.1.1
          command:
            - /git-sync
            - --repo={{ application_operator_repo }}
            - --branch={{ application_operator_branch }}
            - --wait={{ application_operator_sync_interval }}
            - --dest=ansible
            - --ssh
            - --root=/opt
          volumeMounts:
            - name: ansible-repo
              mountPath: /opt
            - name: git-ssh-key
              mountPath: /etc/git-secret
{% for application in application_operator_applications %}
        - name: git-sync-{{ application }}
          image: k8s.gcr.io/git-sync:v3.1.1
          command:
            - /git-sync
            - --repo=git@github.com:willthames/ansible-demo-{{ application }}
            - --branch={{ env }}
            - --wait={{ application_operator_sync_interval }}
            - --dest={{ application }}
            - --ssh
            - --root=/applications/{{ application }}
          volumeMounts:
            - name: ansible-repo-{{ application }}
              mountPath: /applications/{{ application }}
            - name: git-ssh-key
              mountPath: /etc/git-secret
{% endfor %}
      volumes:
        - name: vault-password
          secret:
            secretName: {{ kube_resource_secrets.vault | k8s_config_resource_name }}
        - name: ansible-repo
          emptyDir: {}
        - name: git-ssh-key
          secret:
            secretName: {{ kube_resource_secrets.ssh | k8s_config_resource_name }}
            defaultMode: 0440
        - name: ansible-cfg
          configMap:
            name: {{ kube_resource_configmaps.ansible | k8s_config_resource_name }}
{% for application in application_operator_applications %}
        - name: ansible-repo-{{ application }}
          emptyDir: {}
{% endfor %}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ kube_resource_name }}
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - skedulo.com
  resources:
  - '*'
  verbs:
  - '*'
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ kube_resource_name }}
subjects:
- kind: ServiceAccount
  name: {{ kube_resource_name }}
  namespace: {{ kube_resource_namespace }}
roleRef:
  kind: ClusterRole
  name: {{ kube_resource_name }}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ kube_resource_name }}
  namespace: {{ kube_resource_namespace }}
---
apiVersion: thames.id.au/v1alpha1
kind: Consolidation
metadata:
  name: {{ kube_resource_name }}
  namespace: {{ kube_resource_namespace }}
spec:
  env: {{ kube_resource_namespace }}
